---
on:
  pull_request:
    paths:
      - '**.tf'
      - '**.tfvars'
      - '**.tfvars.json'

jobs:
  terraform-plan:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@main
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@main
        with:
          cli_config_credentials_token: ${{ secrets.TOKEN_TFC }}
      - name: Terraform Init
        run: |
          cat <<-EOF > ./sensitive.auto.tfvars
          tfc_token    = "${{ secrets.TOKEN_TFC }}"
          github_token = "${{ secrets.TOKEN_GITHUB }}"
          EOF
          terraform init
          terraform -version
      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color -input=false
        continue-on-error: true
      - uses: actions/github-script@main
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
          TF_PLAN_OUT: "$((grep 'Plan:' ${process.env.PLAN}) || ((grep -q \"No changes\" ${process.env.PLAN}) && echo \"Plan 0 to create, 0 to update, 0 to delete\" || exit 1))"
        with:
          github-token: ${{ secrets.TOKEN_GITHUB }}
          script: |
            const output = `#### Terraform Plan ðŸ“–\`${{ steps.plan.outcome }}\`\n${process.env.TF_PLAN_OUT}

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
